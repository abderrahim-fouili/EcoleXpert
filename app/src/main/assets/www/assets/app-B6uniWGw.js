import{A as r,a as f,N as p,cH as y,aP as U,J as E,Y as w,aW as S,B as T}from"./index-Bl2lQPd7.js";function B(){const c=r([]),n=r([]),l=r([]),v=r([]),i=r([]),m=r([]),t=r({students:!1,academicYears:!1,statuts:!1,staff:!1,horaireTypes:!1,intervalUnits:!1});return{studentOptions:c,academicYearOptions:n,statutOptions:l,staffOptions:v,horaireTypeOptions:i,intervalUnitOptions:m,loadingStates:t,fetchStudents:async(e="",a=null,s=null)=>{if(!a)return[];t.value.students=!0;try{let u={nom:e};a&&(u.idannee=a),s&&(u={...u,...s});const d=await f("get","/eleve-traitements/form-data/students",{params:u});return c.value=d.data,d.data}catch(u){return console.error("Error fetching students:",u),p.create({type:"negative",message:"Erreur chargement élèves."}),[]}finally{t.value.students=!1}},fetchAcademicYears:async()=>{t.value.academicYears=!0;try{const e=await f("get","/eleve-traitements/form-data/academic-years");n.value=e.data}catch(e){console.error("Error fetching academic years:",e),p.create({type:"negative",message:"Erreur chargement années scolaires."})}finally{t.value.academicYears=!1}},fetchTraitementStatuts:async()=>{t.value.statuts=!0;try{const e=await f("get","/eleve-traitements/form-data/statuts");l.value=e.data.map(a=>({label:a.replace(/_/g," ").toLowerCase().replace(/\b\w/g,s=>s.toUpperCase()),value:a}))}catch(e){console.error("Error fetching traitement statuts:",e),p.create({type:"negative",message:"Erreur chargement statuts."})}finally{t.value.statuts=!1}},fetchStaff:async()=>{t.value.staff=!0;try{const e=await f("get","/eleve-traitements/form-data/staff");v.value=e.data}catch(e){console.error("Error fetching staff:",e),p.create({type:"negative",message:"Erreur chargement personnel."})}finally{t.value.staff=!1}},fetchHoraireTypes:async()=>{t.value.horaireTypes=!0;try{const e=await f("get","/eleve-traitements/form-data/horaire-types");i.value=e.data.map(a=>({label:a.replace(/_/g," ").toLowerCase().replace(/\b\w/g,s=>s.toUpperCase()),value:a}))}catch(e){console.error("Error fetching horaire types:",e),p.create({type:"negative",message:"Erreur chargement types d'horaire."})}finally{t.value.horaireTypes=!1}},fetchHoraireIntervalUnits:async()=>{t.value.intervalUnits=!0;try{const e=await f("get","/eleve-traitements/form-data/horaire-interval-units");m.value=e.data.map(a=>({label:a.toLowerCase().replace(/\b\w/g,s=>s.toUpperCase()),value:a}))}catch(e){console.error("Error fetching interval units:",e),p.create({type:"negative",message:"Erreur chargement unités d'intervalle."})}finally{t.value.intervalUnits=!1}}}}const H=y("auth",()=>{const c=U(),n=r(null),l=E.defaults.headers.common.Authorization;let v=null;typeof l=="string"&&l.startsWith("Bearer ")&&(v=l.substring(7));const i=r(v);function m(o){n.value=o}function t(o){i.value=o}function h(){n.value=null,i.value=null}return w(()=>c.getters["user/user"],(o,g)=>{o!==g&&m(o)},{immediate:!0}),{user:n,token:i,setUser:m,setToken:t,clearAuth:h}}),O=y("app",()=>{const c=r(S("api"));return{getBaseUrl:T(()=>c.value)}});export{B as a,O as b,H as u};
